description = '''coupon core implementation used by endpoint service, it contains model, service, utility etc'''

sourceSets {
  generated {
    java {
      srcDirs = ['src/main/generated']
    }
  }
}

configurations {
  /**
   * Configuration used by QueryDSL APT generator
   */
  querydslapt
}

dependencies {
  compile project(":coupons-shared")
  compile("ma.glasnost.orika:orika-core")
  compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
  compile("org.apache.httpcomponents:httpclient")
  compile("com.getsentry.raven:raven-logback")
  compile("org.hibernate.javax.persistence:hibernate-jpa-2.1-api")
  compile("org.springframework.boot:spring-boot-starter-aop")
  compile("org.springframework.boot:spring-boot-starter-data-jpa")
  compile("org.springframework.boot:spring-boot-starter-data-mongodb")
  compile('org.springframework.boot:spring-boot-starter-logging')
  compile('org.springframework.boot:spring-boot-starter-cache')
  compile("org.springframework.retry:spring-retry")
  compile("com.querydsl:querydsl-core")
  compile("com.querydsl:querydsl-collections")
  compile("com.querydsl:querydsl-jpa")
  querydslapt("com.querydsl:querydsl-apt")
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
  source = sourceSets.main.java

  classpath = configurations.compile + configurations.querydslapt

  options.compilerArgs = [
    "-proc:only",
    "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
  ]

  destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
  dependsOn generateQueryDSL
  source generateQueryDSL.destinationDir
}

compileGeneratedJava {
  dependsOn generateQueryDSL
  options.warnings = false
  classpath += sourceSets.main.runtimeClasspath
}

clean {
  delete sourceSets.generated.java.srcDirs
}

checkstyleGenerated.enabled = false
